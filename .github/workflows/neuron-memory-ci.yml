# 🧠 Neuron Memory Test Workflow 🧪
# This workflow tests the robustness, reliability, and data integrity of the Neuron memory system.

name: 'Neuron Memory CI'

on:
  push:
    paths:
      - 'neuron/memory/**'
      - 'test_neuron_memory.py'
      - '.github/workflows/neuron-memory-ci.yml'
  pull_request:
    paths:
      - 'neuron/memory/**'
      - 'test_neuron_memory.py'
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC

jobs:
  test-memory-operations:
    name: '🧪 Test Core Memory Operations'
    runs-on: ubuntu-latest
    steps:
      - name: '⬇️ Check out repository'
        uses: actions/checkout@v4

      - name: '🐍 Set up Python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: '⚙️ Install dependencies'
        run: |
          python -m pip install --upgrade pip
          # Add your actual dependencies here
          # pip install -r requirements.txt

      - name: '✅ Verify test script exists'
        run: |
          if [ ! -f "test_neuron_memory.py" ]; then
            echo "❌ test_neuron_memory.py not found"
            exit 1
          fi
          echo "✅ test_neuron_memory.py found"

      - name: '➕ Test: neuron memory add'
        run: |
          echo "Testing memory add operations..."
          python test_neuron_memory.py add "episodic" "Test entry 1"
          python test_neuron_memory.py add "semantic" "Test entry 2"

      - name: '🔍 Test: neuron memory view'
        run: |
          echo "Testing memory view operations..."
          python test_neuron_memory.py view "episodic" "Test entry 1"
          python test_neuron_memory.py view "semantic" "Test entry 2"

      - name: '📤 Upload memory state'
        uses: actions/upload-artifact@v3
        with:
          name: memory-state
          path: mock_memory.json
          if-no-files-found: warn

  test-persistence:
    name: '💾 Test Memory Persistence'
    runs-on: ubuntu-latest
    needs: test-memory-operations
    steps:
      - name: '⬇️ Check out repository'
        uses: actions/checkout@v4

      - name: '🐍 Set up Python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: '📥 Download memory state'
        uses: actions/download-artifact@v3
        with:
          name: memory-state

      - name: '➕ Add memory before restart'
        run: |
          python test_neuron_memory.py add "episodic" "Data before restart"

      - name: '🔄 Simulate Agent Restart'
        run: |
          echo "Simulating a restart..."
          echo "Memory file contents:"
          cat mock_memory.json || echo "No memory file found"

      - name: '🔎 Verify memory after restart'
        run: |
          python test_neuron_memory.py view "episodic" "Data before restart"

  test-data-integrity:
    name: '🛡️ Test Data Integrity'
    runs-on: ubuntu-latest
    needs: test-persistence
    steps:
      - name: '⬇️ Check out repository'
        uses: actions/checkout@v4

      - name: '🐍 Set up Python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: '🧮 Test: Data Integrity and Hash Comparison'
        run: |
          # Add some test data first
          python test_neuron_memory.py add "episodic" "Integrity test data"
          python test_neuron_memory.py integrity_check

  test-clear-memory:
    name: '🗑️ Test: neuron memory clear'
    runs-on: ubuntu-latest
    needs: test-data-integrity
    steps:
      - name: '⬇️ Check out repository'
        uses: actions/checkout@v4

      - name: '🐍 Set up Python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: '➕ Add memory to be cleared'
        run: |
          python test_neuron_memory.py add "working" "This should be cleared"

      - name: '🧹 Clear working memory'
        run: |
          python test_neuron_memory.py clear "working"

      - name: '✅ Verify memory is cleared'
        run: |
          python test_neuron_memory.py verify_clear "working"

  test-summary:
    name: '📊 Test Summary'
    runs-on: ubuntu-latest
    needs: [test-memory-operations, test-persistence, test-data-integrity, test-clear-memory]
    if: always()
    steps:
      - name: '📜 Check test results'
        run: |
          echo "=== Test Summary ==="
          echo "Memory Operations: ${{ needs.test-memory-operations.result }}"
          echo "Persistence: ${{ needs.test-persistence.result }}"
          echo "Data Integrity: ${{ needs.test-data-integrity.result }}"
          echo "Clear Memory: ${{ needs.test-clear-memory.result }}"
          
          if [[ "${{ needs.test-memory-operations.result }}" == "success" && 
                "${{ needs.test-persistence.result }}" == "success" && 
                "${{ needs.test-data-integrity.result }}" == "success" && 
                "${{ needs.test-clear-memory.result }}" == "success" ]]; then
            echo "✅ All memory tests completed successfully!"
          else
            echo "❌ Some tests failed!"
            exit 1
          fi
